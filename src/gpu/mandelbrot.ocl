
__kernel void add(
    __global ushort *buffer,
    ushort max_iterations, double width,
    int halfWidth,
    double zoom,
    double offset_x,
    double offset_y)
{
  int ix = get_global_id(0);
  int iy = get_global_id(1);

  double cRe = (((double)ix) / width) - 0.5;
  double cImg = (((double)iy) / width) - 0.5;
  cRe *= zoom;
  cImg *= zoom;
  cRe += offset_x;
  cImg += offset_y;

  double cImgSquared = cImg * cImg;
  double cMagSquared = cImgSquared + (cRe * cRe);
  if ((cRe + 1.0) * (cRe + 1.0) + cImgSquared <= 0.0625 ||
      cMagSquared * (8.0 * cMagSquared - 3.0) <= 0.09375 - cRe)
  {
    buffer[(int)width * iy + ix] = max_iterations;
    return;
  }

  double zRe = 0.0;
  double zImg = 0.0;
  double zReSquared = 0.0;
  double zImgSquared = 0.0;

  uint iteration = 0;
  while (zReSquared + zImgSquared <= 4.0 && iteration < max_iterations)
  {
    // Faster algorithm that uses only three multiplications for each iteration
    zImg = (zRe + zRe) * zImg + cImg;

    zRe = zReSquared - zImgSquared + cRe;

    zReSquared = zRe * zRe;
    zImgSquared = zImg * zImg;
    iteration = iteration + 1;
  }
  buffer[(int)width * iy + ix] = iteration;
}